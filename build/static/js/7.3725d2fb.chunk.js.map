{"version":3,"sources":["Components/Cast.jsx"],"names":["Cast","state","cast","a","movieId","this","props","match","params","MoviesApi","getMovieCredits","then","data","setState","BASE_IMG_URL","DEFAULT_IMG","className","map","name","character","profile_path","cast_id","src","width","alt","Component"],"mappings":"mOAIMA,E,4MACFC,MAAQ,CACJC,KAAM,I,8FAGV,4BAAAC,EAAA,6DACYC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QADZ,KAEIC,KAFJ,SAGoBI,IAAUC,gBAAgBN,GAASO,MAAK,SAAAC,GAAI,OAAIA,EAAKV,QAHzE,yBAGQA,KAHR,WAESW,SAFT,gE,0EAMA,WAAU,IACEX,EAASG,KAAKJ,MAAdC,KACAY,EAA8BL,IAA9BK,aAAcC,EAAgBN,IAAhBM,YACtB,OAAQ,oBAAIC,UAAU,YAAd,SACFd,GAAQA,EAAKe,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QACjD,OAAO,qBAAIL,UAAU,cAAd,UACH,oBAAIA,UAAU,YAAd,SAA2BE,IAC3B,oBAAIF,UAAU,iBAAd,SAAgCG,IAChC,qBAAKG,IAAKF,EAAeN,EAAeM,EAAeL,EAAaQ,MAAM,MAAMC,IAAKN,MAHjDG,Y,GAhBrCI,aAiCJzB","file":"static/js/7.3725d2fb.chunk.js","sourcesContent":["import { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport MoviesApi from '../servises/moviesAPI'\r\n\r\nclass Cast extends Component {\r\n    state = {\r\n        cast: [],\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { movieId } = this.props.match.params\r\n        this.setState({\r\n            cast: await MoviesApi.getMovieCredits(movieId).then(data => data.cast)\r\n        })\r\n    }\r\n    render() {\r\n        const { cast } = this.state\r\n        const { BASE_IMG_URL, DEFAULT_IMG } = MoviesApi\r\n        return (<ul className='cast-list'>\r\n            { cast && cast.map(({ name, character, profile_path, cast_id }) => {\r\n                return <li className='cast-member' key={cast_id}>\r\n                    <h2 className='cast-name'>{name}</h2>\r\n                    <h3 className='character-name'>{character}</h3>\r\n                    <img src={profile_path ? BASE_IMG_URL + profile_path : DEFAULT_IMG} width='300' alt={name} />\r\n                </li>\r\n            })}\r\n        </ul>)\r\n    }\r\n}\r\n\r\nCast.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.shape({\r\n            movieId: PropTypes.string.isRequired,\r\n        }).isRequired\r\n    })\r\n}\r\nexport default Cast"],"sourceRoot":""}